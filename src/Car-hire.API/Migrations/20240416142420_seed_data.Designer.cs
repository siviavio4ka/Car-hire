// <auto-generated />
using System;
using Car_hire.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Car_hire.API.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240416142420_seed_data")]
    partial class seed_data
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "brand", new[] { "bmw", "mercedes", "toyota", "volvo", "audi" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "status", new[] { "busy", "repair", "available" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Car_hire.DAL.Entities.Models.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CarId"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("HirePrice")
                        .HasColumnType("double precision");

                    b.Property<int>("Mileage")
                        .HasColumnType("integer");

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.Property<int>("SeatingCapacity")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CarId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            CarId = 1,
                            Brand = "Audi",
                            HirePrice = 834.0,
                            Mileage = 36430,
                            Number = "1246 XV-1",
                            SeatingCapacity = 9,
                            Status = "Repair"
                        },
                        new
                        {
                            CarId = 2,
                            Brand = "BMW",
                            HirePrice = 274.0,
                            Mileage = 63112,
                            Number = "2974 XI-1",
                            SeatingCapacity = 8,
                            Status = "Available"
                        },
                        new
                        {
                            CarId = 3,
                            Brand = "Toyota",
                            HirePrice = 292.0,
                            Mileage = 93329,
                            Number = "1170 AF-5",
                            SeatingCapacity = 2,
                            Status = "Available"
                        },
                        new
                        {
                            CarId = 4,
                            Brand = "Volvo",
                            HirePrice = 740.0,
                            Mileage = 59771,
                            Number = "9963 SP-1",
                            SeatingCapacity = 3,
                            Status = "Repair"
                        },
                        new
                        {
                            CarId = 5,
                            Brand = "Toyota",
                            HirePrice = 108.0,
                            Mileage = 85560,
                            Number = "1413 QX-4",
                            SeatingCapacity = 7,
                            Status = "Busy"
                        },
                        new
                        {
                            CarId = 6,
                            Brand = "Mercedes",
                            HirePrice = 601.0,
                            Mileage = 9673,
                            Number = "9004 KV-6",
                            SeatingCapacity = 7,
                            Status = "Repair"
                        },
                        new
                        {
                            CarId = 7,
                            Brand = "Mercedes",
                            HirePrice = 789.0,
                            Mileage = 31397,
                            Number = "1845 GC-3",
                            SeatingCapacity = 7,
                            Status = "Available"
                        },
                        new
                        {
                            CarId = 8,
                            Brand = "Audi",
                            HirePrice = 216.0,
                            Mileage = 89519,
                            Number = "3376 DH-6",
                            SeatingCapacity = 4,
                            Status = "Repair"
                        },
                        new
                        {
                            CarId = 9,
                            Brand = "Toyota",
                            HirePrice = 588.0,
                            Mileage = 19787,
                            Number = "7625 OT-6",
                            SeatingCapacity = 3,
                            Status = "Repair"
                        },
                        new
                        {
                            CarId = 10,
                            Brand = "Audi",
                            HirePrice = 468.0,
                            Mileage = 26830,
                            Number = "7792 VO-5",
                            SeatingCapacity = 7,
                            Status = "Available"
                        },
                        new
                        {
                            CarId = 11,
                            Brand = "BMW",
                            HirePrice = 744.0,
                            Mileage = 80337,
                            Number = "5988 VC-2",
                            SeatingCapacity = 3,
                            Status = "Repair"
                        },
                        new
                        {
                            CarId = 12,
                            Brand = "Audi",
                            HirePrice = 878.0,
                            Mileage = 6866,
                            Number = "3370 TF-6",
                            SeatingCapacity = 9,
                            Status = "Busy"
                        },
                        new
                        {
                            CarId = 13,
                            Brand = "Mercedes",
                            HirePrice = 161.0,
                            Mileage = 9940,
                            Number = "8513 RZ-1",
                            SeatingCapacity = 6,
                            Status = "Available"
                        },
                        new
                        {
                            CarId = 14,
                            Brand = "Volvo",
                            HirePrice = 766.0,
                            Mileage = 7594,
                            Number = "2024 OP-3",
                            SeatingCapacity = 8,
                            Status = "Repair"
                        },
                        new
                        {
                            CarId = 15,
                            Brand = "Mercedes",
                            HirePrice = 849.0,
                            Mileage = 88835,
                            Number = "7103 CH-4",
                            SeatingCapacity = 3,
                            Status = "Repair"
                        },
                        new
                        {
                            CarId = 16,
                            Brand = "Toyota",
                            HirePrice = 592.0,
                            Mileage = 64512,
                            Number = "5346 HZ-6",
                            SeatingCapacity = 8,
                            Status = "Repair"
                        },
                        new
                        {
                            CarId = 17,
                            Brand = "BMW",
                            HirePrice = 586.0,
                            Mileage = 33607,
                            Number = "6922 PJ-5",
                            SeatingCapacity = 6,
                            Status = "Available"
                        },
                        new
                        {
                            CarId = 18,
                            Brand = "Audi",
                            HirePrice = 492.0,
                            Mileage = 75534,
                            Number = "5958 PE-4",
                            SeatingCapacity = 8,
                            Status = "Repair"
                        },
                        new
                        {
                            CarId = 19,
                            Brand = "Volvo",
                            HirePrice = 220.0,
                            Mileage = 94787,
                            Number = "9434 XU-2",
                            SeatingCapacity = 7,
                            Status = "Available"
                        },
                        new
                        {
                            CarId = 20,
                            Brand = "BMW",
                            HirePrice = 472.0,
                            Mileage = 77416,
                            Number = "6465 SL-6",
                            SeatingCapacity = 5,
                            Status = "Busy"
                        },
                        new
                        {
                            CarId = 21,
                            Brand = "Mercedes",
                            HirePrice = 481.0,
                            Mileage = 62681,
                            Number = "4904 ON-2",
                            SeatingCapacity = 5,
                            Status = "Busy"
                        },
                        new
                        {
                            CarId = 22,
                            Brand = "BMW",
                            HirePrice = 543.0,
                            Mileage = 14344,
                            Number = "4835 IF-6",
                            SeatingCapacity = 2,
                            Status = "Repair"
                        },
                        new
                        {
                            CarId = 23,
                            Brand = "Volvo",
                            HirePrice = 136.0,
                            Mileage = 86090,
                            Number = "2462 LT-3",
                            SeatingCapacity = 2,
                            Status = "Repair"
                        },
                        new
                        {
                            CarId = 24,
                            Brand = "Audi",
                            HirePrice = 493.0,
                            Mileage = 11472,
                            Number = "3591 GS-4",
                            SeatingCapacity = 4,
                            Status = "Available"
                        },
                        new
                        {
                            CarId = 25,
                            Brand = "BMW",
                            HirePrice = 690.0,
                            Mileage = 79656,
                            Number = "5098 XT-6",
                            SeatingCapacity = 2,
                            Status = "Repair"
                        },
                        new
                        {
                            CarId = 26,
                            Brand = "Toyota",
                            HirePrice = 489.0,
                            Mileage = 24450,
                            Number = "9304 GT-2",
                            SeatingCapacity = 6,
                            Status = "Available"
                        },
                        new
                        {
                            CarId = 27,
                            Brand = "Toyota",
                            HirePrice = 115.0,
                            Mileage = 38243,
                            Number = "6557 MZ-4",
                            SeatingCapacity = 6,
                            Status = "Available"
                        },
                        new
                        {
                            CarId = 28,
                            Brand = "Mercedes",
                            HirePrice = 845.0,
                            Mileage = 35492,
                            Number = "6819 JJ-5",
                            SeatingCapacity = 3,
                            Status = "Repair"
                        },
                        new
                        {
                            CarId = 29,
                            Brand = "Mercedes",
                            HirePrice = 332.0,
                            Mileage = 58982,
                            Number = "7044 QW-1",
                            SeatingCapacity = 2,
                            Status = "Repair"
                        },
                        new
                        {
                            CarId = 30,
                            Brand = "BMW",
                            HirePrice = 478.0,
                            Mileage = 77162,
                            Number = "5454 CI-2",
                            SeatingCapacity = 3,
                            Status = "Busy"
                        });
                });

            modelBuilder.Entity("Car_hire.DAL.Entities.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OrderId"));

                    b.Property<double?>("Amount")
                        .HasColumnType("double precision");

                    b.Property<int>("CarId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("timestamp");

                    b.Property<int>("HireHours")
                        .HasColumnType("integer");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("OrderId");

                    b.HasIndex("CarId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CarId = 5,
                            Deadline = new DateTime(2002, 9, 30, 14, 48, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 41,
                            OrderDate = new DateTime(2002, 9, 28, 21, 48, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 11348,
                            UserId = 22
                        },
                        new
                        {
                            OrderId = 2,
                            CarId = 25,
                            Deadline = new DateTime(2022, 1, 13, 4, 53, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 44,
                            OrderDate = new DateTime(2022, 1, 11, 8, 53, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 74410,
                            UserId = 24
                        },
                        new
                        {
                            OrderId = 3,
                            CarId = 20,
                            Deadline = new DateTime(2009, 3, 15, 1, 33, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 158,
                            OrderDate = new DateTime(2009, 3, 8, 11, 33, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 51083,
                            UserId = 29
                        },
                        new
                        {
                            OrderId = 4,
                            CarId = 6,
                            Deadline = new DateTime(2000, 9, 5, 1, 10, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 63,
                            OrderDate = new DateTime(2000, 9, 2, 10, 10, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 55889,
                            UserId = 19
                        },
                        new
                        {
                            OrderId = 5,
                            CarId = 28,
                            Deadline = new DateTime(2008, 4, 1, 0, 31, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 99,
                            OrderDate = new DateTime(2008, 3, 27, 21, 31, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 66642,
                            UserId = 15
                        },
                        new
                        {
                            OrderId = 6,
                            CarId = 21,
                            Deadline = new DateTime(2022, 4, 1, 23, 33, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 77,
                            OrderDate = new DateTime(2022, 3, 29, 18, 33, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 67395,
                            UserId = 11
                        },
                        new
                        {
                            OrderId = 7,
                            CarId = 21,
                            Deadline = new DateTime(2006, 11, 1, 16, 18, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 156,
                            OrderDate = new DateTime(2006, 10, 26, 4, 18, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 94089,
                            UserId = 26
                        },
                        new
                        {
                            OrderId = 8,
                            CarId = 2,
                            Deadline = new DateTime(2007, 8, 17, 20, 23, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 22,
                            OrderDate = new DateTime(2007, 8, 16, 22, 23, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 35152,
                            UserId = 5
                        },
                        new
                        {
                            OrderId = 9,
                            CarId = 25,
                            Deadline = new DateTime(2002, 5, 23, 13, 31, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 26,
                            OrderDate = new DateTime(2002, 5, 22, 11, 31, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 58286,
                            UserId = 19
                        },
                        new
                        {
                            OrderId = 10,
                            CarId = 10,
                            Deadline = new DateTime(2022, 3, 19, 9, 58, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 128,
                            OrderDate = new DateTime(2022, 3, 14, 1, 58, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 33015,
                            UserId = 29
                        },
                        new
                        {
                            OrderId = 11,
                            CarId = 2,
                            Deadline = new DateTime(2003, 10, 23, 7, 12, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 15,
                            OrderDate = new DateTime(2003, 10, 22, 16, 12, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 77724,
                            UserId = 25
                        },
                        new
                        {
                            OrderId = 12,
                            CarId = 22,
                            Deadline = new DateTime(2020, 12, 22, 21, 17, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 72,
                            OrderDate = new DateTime(2020, 12, 19, 21, 17, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 89597,
                            UserId = 12
                        },
                        new
                        {
                            OrderId = 13,
                            CarId = 3,
                            Deadline = new DateTime(2016, 1, 21, 13, 37, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 41,
                            OrderDate = new DateTime(2016, 1, 19, 20, 37, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 41653,
                            UserId = 17
                        },
                        new
                        {
                            OrderId = 14,
                            CarId = 28,
                            Deadline = new DateTime(2001, 9, 12, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 92,
                            OrderDate = new DateTime(2001, 9, 8, 13, 15, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 93403,
                            UserId = 25
                        },
                        new
                        {
                            OrderId = 15,
                            CarId = 15,
                            Deadline = new DateTime(2009, 3, 19, 0, 11, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 68,
                            OrderDate = new DateTime(2009, 3, 16, 4, 11, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 66911,
                            UserId = 28
                        },
                        new
                        {
                            OrderId = 16,
                            CarId = 19,
                            Deadline = new DateTime(2000, 4, 26, 4, 15, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 131,
                            OrderDate = new DateTime(2000, 4, 20, 17, 15, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 26322,
                            UserId = 16
                        },
                        new
                        {
                            OrderId = 17,
                            CarId = 9,
                            Deadline = new DateTime(2010, 6, 21, 6, 15, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 100,
                            OrderDate = new DateTime(2010, 6, 17, 2, 15, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 68801,
                            UserId = 20
                        },
                        new
                        {
                            OrderId = 18,
                            CarId = 19,
                            Deadline = new DateTime(2018, 8, 27, 18, 4, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 160,
                            OrderDate = new DateTime(2018, 8, 21, 2, 4, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 85055,
                            UserId = 26
                        },
                        new
                        {
                            OrderId = 19,
                            CarId = 27,
                            Deadline = new DateTime(2017, 11, 22, 4, 31, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 34,
                            OrderDate = new DateTime(2017, 11, 20, 18, 31, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 50499,
                            UserId = 9
                        },
                        new
                        {
                            OrderId = 20,
                            CarId = 10,
                            Deadline = new DateTime(2014, 9, 14, 17, 48, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 109,
                            OrderDate = new DateTime(2014, 9, 10, 4, 48, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 30412,
                            UserId = 6
                        },
                        new
                        {
                            OrderId = 21,
                            CarId = 25,
                            Deadline = new DateTime(2007, 11, 19, 15, 38, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 149,
                            OrderDate = new DateTime(2007, 11, 13, 10, 38, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 62309,
                            UserId = 13
                        },
                        new
                        {
                            OrderId = 22,
                            CarId = 13,
                            Deadline = new DateTime(2021, 2, 17, 5, 34, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 36,
                            OrderDate = new DateTime(2021, 2, 15, 17, 34, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 81108,
                            UserId = 13
                        },
                        new
                        {
                            OrderId = 23,
                            CarId = 29,
                            Deadline = new DateTime(2014, 7, 9, 11, 55, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 25,
                            OrderDate = new DateTime(2014, 7, 8, 10, 55, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 68167,
                            UserId = 19
                        },
                        new
                        {
                            OrderId = 24,
                            CarId = 24,
                            Deadline = new DateTime(2023, 3, 20, 17, 36, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 16,
                            OrderDate = new DateTime(2023, 3, 20, 1, 36, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 98648,
                            UserId = 24
                        },
                        new
                        {
                            OrderId = 25,
                            CarId = 10,
                            Deadline = new DateTime(2003, 10, 24, 4, 18, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 114,
                            OrderDate = new DateTime(2003, 10, 19, 10, 18, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 93845,
                            UserId = 15
                        },
                        new
                        {
                            OrderId = 26,
                            CarId = 19,
                            Deadline = new DateTime(2018, 6, 9, 7, 20, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 59,
                            OrderDate = new DateTime(2018, 6, 6, 20, 20, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 65564,
                            UserId = 18
                        },
                        new
                        {
                            OrderId = 27,
                            CarId = 17,
                            Deadline = new DateTime(2005, 10, 20, 14, 27, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 15,
                            OrderDate = new DateTime(2005, 10, 19, 23, 27, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 77733,
                            UserId = 23
                        },
                        new
                        {
                            OrderId = 28,
                            CarId = 1,
                            Deadline = new DateTime(2000, 7, 4, 1, 22, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 153,
                            OrderDate = new DateTime(2000, 6, 27, 16, 22, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 45088,
                            UserId = 14
                        },
                        new
                        {
                            OrderId = 29,
                            CarId = 24,
                            Deadline = new DateTime(2000, 8, 27, 11, 44, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 28,
                            OrderDate = new DateTime(2000, 8, 26, 7, 44, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 68655,
                            UserId = 25
                        },
                        new
                        {
                            OrderId = 30,
                            CarId = 20,
                            Deadline = new DateTime(2013, 3, 8, 19, 55, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 41,
                            OrderDate = new DateTime(2013, 3, 7, 2, 55, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 87361,
                            UserId = 14
                        },
                        new
                        {
                            OrderId = 31,
                            CarId = 25,
                            Deadline = new DateTime(2021, 3, 26, 2, 53, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 106,
                            OrderDate = new DateTime(2021, 3, 21, 16, 53, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 46625,
                            UserId = 1
                        },
                        new
                        {
                            OrderId = 32,
                            CarId = 15,
                            Deadline = new DateTime(2010, 10, 8, 11, 36, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 82,
                            OrderDate = new DateTime(2010, 10, 5, 1, 36, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 23685,
                            UserId = 27
                        },
                        new
                        {
                            OrderId = 33,
                            CarId = 1,
                            Deadline = new DateTime(2002, 4, 14, 15, 2, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 157,
                            OrderDate = new DateTime(2002, 4, 8, 2, 2, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 86461,
                            UserId = 1
                        },
                        new
                        {
                            OrderId = 34,
                            CarId = 2,
                            Deadline = new DateTime(2018, 5, 14, 0, 14, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 129,
                            OrderDate = new DateTime(2018, 5, 8, 15, 14, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 40559,
                            UserId = 10
                        },
                        new
                        {
                            OrderId = 35,
                            CarId = 8,
                            Deadline = new DateTime(2010, 4, 19, 1, 35, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 153,
                            OrderDate = new DateTime(2010, 4, 12, 16, 35, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 77690,
                            UserId = 27
                        },
                        new
                        {
                            OrderId = 36,
                            CarId = 19,
                            Deadline = new DateTime(2012, 8, 21, 17, 56, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 56,
                            OrderDate = new DateTime(2012, 8, 19, 9, 56, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 21765,
                            UserId = 2
                        },
                        new
                        {
                            OrderId = 37,
                            CarId = 1,
                            Deadline = new DateTime(2011, 4, 3, 23, 15, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 87,
                            OrderDate = new DateTime(2011, 3, 31, 8, 15, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 21905,
                            UserId = 20
                        },
                        new
                        {
                            OrderId = 38,
                            CarId = 27,
                            Deadline = new DateTime(2009, 7, 16, 10, 43, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 29,
                            OrderDate = new DateTime(2009, 7, 15, 5, 43, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 31127,
                            UserId = 4
                        },
                        new
                        {
                            OrderId = 39,
                            CarId = 24,
                            Deadline = new DateTime(2003, 9, 3, 0, 49, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 126,
                            OrderDate = new DateTime(2003, 8, 28, 18, 49, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 14679,
                            UserId = 20
                        },
                        new
                        {
                            OrderId = 40,
                            CarId = 16,
                            Deadline = new DateTime(2019, 2, 22, 18, 6, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 37,
                            OrderDate = new DateTime(2019, 2, 21, 5, 6, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 17721,
                            UserId = 20
                        },
                        new
                        {
                            OrderId = 41,
                            CarId = 3,
                            Deadline = new DateTime(2017, 9, 7, 0, 13, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 89,
                            OrderDate = new DateTime(2017, 9, 3, 7, 13, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 26754,
                            UserId = 5
                        },
                        new
                        {
                            OrderId = 42,
                            CarId = 27,
                            Deadline = new DateTime(2007, 6, 16, 10, 49, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 146,
                            OrderDate = new DateTime(2007, 6, 10, 8, 49, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 52534,
                            UserId = 26
                        },
                        new
                        {
                            OrderId = 43,
                            CarId = 23,
                            Deadline = new DateTime(2011, 4, 10, 7, 2, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 146,
                            OrderDate = new DateTime(2011, 4, 4, 5, 2, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 29701,
                            UserId = 26
                        },
                        new
                        {
                            OrderId = 44,
                            CarId = 14,
                            Deadline = new DateTime(2005, 10, 5, 20, 20, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 73,
                            OrderDate = new DateTime(2005, 10, 2, 19, 20, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 10856,
                            UserId = 20
                        },
                        new
                        {
                            OrderId = 45,
                            CarId = 23,
                            Deadline = new DateTime(2022, 10, 11, 5, 6, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 12,
                            OrderDate = new DateTime(2022, 10, 10, 17, 6, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 57065,
                            UserId = 25
                        },
                        new
                        {
                            OrderId = 46,
                            CarId = 6,
                            Deadline = new DateTime(2018, 2, 21, 5, 50, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 78,
                            OrderDate = new DateTime(2018, 2, 17, 23, 50, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 86932,
                            UserId = 11
                        },
                        new
                        {
                            OrderId = 47,
                            CarId = 28,
                            Deadline = new DateTime(2013, 8, 5, 12, 22, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 62,
                            OrderDate = new DateTime(2013, 8, 2, 22, 22, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 67931,
                            UserId = 11
                        },
                        new
                        {
                            OrderId = 48,
                            CarId = 22,
                            Deadline = new DateTime(2022, 2, 27, 16, 11, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 147,
                            OrderDate = new DateTime(2022, 2, 21, 13, 11, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 12154,
                            UserId = 10
                        },
                        new
                        {
                            OrderId = 49,
                            CarId = 14,
                            Deadline = new DateTime(2016, 1, 2, 5, 3, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 152,
                            OrderDate = new DateTime(2015, 12, 26, 21, 3, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 29809,
                            UserId = 14
                        },
                        new
                        {
                            OrderId = 50,
                            CarId = 12,
                            Deadline = new DateTime(2018, 11, 3, 6, 59, 0, 0, DateTimeKind.Unspecified),
                            HireHours = 140,
                            OrderDate = new DateTime(2018, 10, 28, 10, 59, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = 12688,
                            UserId = 8
                        });
                });

            modelBuilder.Entity("Car_hire.DAL.Entities.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Employee",
                            NormalizedName = "EMPLOYEE"
                        },
                        new
                        {
                            Id = 3,
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Car_hire.DAL.Entities.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PassportDetails")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            Address = "83 Main Street, Valleyview",
                            ConcurrencyStamp = "764d249a-3547-44a9-a8d4-769e5583f929",
                            Email = "jessicarobinson27@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Jessica Robinson",
                            NormalizedEmail = "JESSICAROBINSON27@GMAIL.COM",
                            NormalizedUserName = "JESSICAROBINSON",
                            PassportDetails = "GK3441473",
                            PasswordHash = "AQAAAAIAAYagAAAAEGfK43MQp99+2IM7N+BbS9/miMiYRzYRQE1R65FDhjBtTU18mjT0aRl6McOnkTpaUQ==",
                            PhoneNumber = "+375 25 9940988",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "f948531b-9eac-44d7-97d6-9a222643c408",
                            TwoFactorEnabled = false,
                            UserName = "jessicarobinson"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            Address = "20 Victory Street, Mountainview",
                            ConcurrencyStamp = "1c608374-b642-420f-a218-b9a26a43e429",
                            Email = "elizabethjohnson23@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Elizabeth Johnson",
                            NormalizedEmail = "ELIZABETHJOHNSON23@GMAIL.COM",
                            NormalizedUserName = "ELIZABETHJOHNSON",
                            PassportDetails = "CZ4396094",
                            PasswordHash = "AQAAAAIAAYagAAAAEIqm50WtEAfNuBZS458qPq/SdgCu3OPTI9a4JW4ROKzYMkSV6pAtYiTuoukO5IDTXA==",
                            PhoneNumber = "+375 33 2192065",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "e3e145b3-8eb7-477c-a83e-1d703276f84e",
                            TwoFactorEnabled = false,
                            UserName = "elizabethjohnson"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            Address = "36 Third Street, Cedarville",
                            ConcurrencyStamp = "1bd7dbb9-4996-4148-b25f-c8ef009acadc",
                            Email = "lindahernandez52@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Linda Hernandez",
                            NormalizedEmail = "LINDAHERNANDEZ52@GMAIL.COM",
                            NormalizedUserName = "LINDAHERNANDEZ",
                            PassportDetails = "HR4906410",
                            PasswordHash = "AQAAAAIAAYagAAAAELDifYncuwdxccgmLM3Ruf4iv0NTWvyxKihGgIyJKa82nGtfwsQs4uH4XU1c8MjJ+A==",
                            PhoneNumber = "+375 25 7748313",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "bc32ba8c-208c-430a-b7cf-2f752cd9dfcf",
                            TwoFactorEnabled = false,
                            UserName = "lindahernandez"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            Address = "33 High Street, Countyville",
                            ConcurrencyStamp = "965892c8-8d99-4bee-89ed-2d49901e834d",
                            Email = "emilywhite67@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Emily White",
                            NormalizedEmail = "EMILYWHITE67@GMAIL.COM",
                            NormalizedUserName = "EMILYWHITE",
                            PassportDetails = "LE1854169",
                            PasswordHash = "AQAAAAIAAYagAAAAEKcozGudx7UkaUXuPAyzQ9pfq6eQtI3N2TI0xRjw9vIj43zBAGW0tLUJz6jEPGOYmA==",
                            PhoneNumber = "+375 29 9497300",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "39308c10-9b23-4521-8701-84ef72ed89c6",
                            TwoFactorEnabled = false,
                            UserName = "emilywhite"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            Address = "59 School Lane, Cityville",
                            ConcurrencyStamp = "a16bf260-e601-41b0-b84a-612ff142248b",
                            Email = "williamallen96@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "William Allen",
                            NormalizedEmail = "WILLIAMALLEN96@GMAIL.COM",
                            NormalizedUserName = "WILLIAMALLEN",
                            PassportDetails = "DB9660635",
                            PasswordHash = "AQAAAAIAAYagAAAAEMQ/JbnytSm7yH1KolgWXzsA46RvMBXYIB/HY1J03vQ5dwvUMnxCiDUDY3nSupkmcg==",
                            PhoneNumber = "+375 29 5196312",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "f5cc5945-9ebe-490a-93a2-385243ef7f6d",
                            TwoFactorEnabled = false,
                            UserName = "williamallen"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            Address = "82 Ninth Street, Harbor City",
                            ConcurrencyStamp = "ef8b939f-25bf-4f9a-83aa-4776880323be",
                            Email = "jamesharris85@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "James Harris",
                            NormalizedEmail = "JAMESHARRIS85@GMAIL.COM",
                            NormalizedUserName = "JAMESHARRIS",
                            PassportDetails = "NO9820984",
                            PasswordHash = "AQAAAAIAAYagAAAAEOX8Tu2kIpu1aZRnT+8QZ5gFCD6Dwgx4+zCBOC8ZNpGjAxRZL6VUBmyIfS74R5qnAw==",
                            PhoneNumber = "+375 44 4112906",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "fa0fa76d-544a-4839-ad25-315cf5173254",
                            TwoFactorEnabled = false,
                            UserName = "jamesharris"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            Address = "39 Seventh Street, Oakwood",
                            ConcurrencyStamp = "45f5f9a3-c7b6-491d-a275-636191014a2f",
                            Email = "jessicamoore61@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Jessica Moore",
                            NormalizedEmail = "JESSICAMOORE61@GMAIL.COM",
                            NormalizedUserName = "JESSICAMOORE",
                            PassportDetails = "ZI6418769",
                            PasswordHash = "AQAAAAIAAYagAAAAEGsrl3doljD4k8t3/sFfuC2Vwcg45o8sVMB0jfJYHlk3nqqk+Ux7hTl8ynZl3MeetQ==",
                            PhoneNumber = "+375 33 5094352",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "46c59809-20fb-40bb-9413-ac3ed0bf149a",
                            TwoFactorEnabled = false,
                            UserName = "jessicamoore"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            Address = "19 Maple Street, Suburbia",
                            ConcurrencyStamp = "6b8d1ab5-deb0-400c-a09b-5c270d628897",
                            Email = "josephrobinson28@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Joseph Robinson",
                            NormalizedEmail = "JOSEPHROBINSON28@GMAIL.COM",
                            NormalizedUserName = "JOSEPHROBINSON",
                            PassportDetails = "HQ9999956",
                            PasswordHash = "AQAAAAIAAYagAAAAEOfEkqNn5hQJG+y82rW4xfM2u93Z+MxAkUYWQb53Tu+rdy6cMvMxdS/xh0z/15lOjg==",
                            PhoneNumber = "+375 33 3868869",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "c4b242b1-b59f-4bd1-96b0-3824902edfff",
                            TwoFactorEnabled = false,
                            UserName = "josephrobinson"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            Address = "79 Washington Avenue, Cedarville",
                            ConcurrencyStamp = "bd667d14-2be3-4915-bd63-c179777833d0",
                            Email = "alicehernandez38@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Alice Hernandez",
                            NormalizedEmail = "ALICEHERNANDEZ38@GMAIL.COM",
                            NormalizedUserName = "ALICEHERNANDEZ",
                            PassportDetails = "KL9612367",
                            PasswordHash = "AQAAAAIAAYagAAAAEBI8hVaiCidSmCUnUFJNbF9WGEEBMy8fvl3zo882O3LN+6n7vTPOCEDwbXyKwH9PfQ==",
                            PhoneNumber = "+375 29 9239737",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "a080244c-4c5d-4a6f-b680-cd00cdee3e08",
                            TwoFactorEnabled = false,
                            UserName = "alicehernandez"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            Address = "76 Maple Street, Hillcrest",
                            ConcurrencyStamp = "1dbebfc3-69bb-4cfc-af52-29dde4de35d6",
                            Email = "elizabethsmith75@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Elizabeth Smith",
                            NormalizedEmail = "ELIZABETHSMITH75@GMAIL.COM",
                            NormalizedUserName = "ELIZABETHSMITH",
                            PassportDetails = "BF7568603",
                            PasswordHash = "AQAAAAIAAYagAAAAEDCzrZMPvwy9AGkfMFFq4Ush5JH8X+mMZiJ/QUMPwKE4+iEJjvR3l6Wjc+MzNAcpKg==",
                            PhoneNumber = "+375 25 4003941",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "09756f6c-2a84-45e6-a0cb-348a710f7790",
                            TwoFactorEnabled = false,
                            UserName = "elizabethsmith"
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            Address = "13 Green Avenue, Townville",
                            ConcurrencyStamp = "c5ffa7ec-c701-49bf-8fe9-289265e41c92",
                            Email = "sarahlewis26@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Sarah Lewis",
                            NormalizedEmail = "SARAHLEWIS26@GMAIL.COM",
                            NormalizedUserName = "SARAHLEWIS",
                            PassportDetails = "ZM9943869",
                            PasswordHash = "AQAAAAIAAYagAAAAECo2qJ0T9/pwtMEeKTVJEdP99opVbxQmZ3ldahtdBiKKSqy6au+0/CNal0mLtUGhTg==",
                            PhoneNumber = "+375 44 8640631",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "e793ed23-0430-40db-9844-705df8ef35cb",
                            TwoFactorEnabled = false,
                            UserName = "sarahlewis"
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            Address = "70 Second Street, Mountainview",
                            ConcurrencyStamp = "85328b9b-a01a-42f9-bc9e-ad33b5286c6a",
                            Email = "margaretrodriguez85@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Margaret Rodriguez",
                            NormalizedEmail = "MARGARETRODRIGUEZ85@GMAIL.COM",
                            NormalizedUserName = "MARGARETRODRIGUEZ",
                            PassportDetails = "CF2512370",
                            PasswordHash = "AQAAAAIAAYagAAAAEFXeO/1/hKp9bGUTNCOnVzKErjOA+YJtY/Qcmk0kJi+/pM4OOApV0KibjHUwR5Vx1g==",
                            PhoneNumber = "+375 33 5919956",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "01ea46af-a05a-49d2-9c63-75b28fa11916",
                            TwoFactorEnabled = false,
                            UserName = "margaretrodriguez"
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            Address = "78 Elm Street, Villageton",
                            ConcurrencyStamp = "36574398-3b0c-43b1-ad38-bf4ed176d727",
                            Email = "emilyjackson92@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Emily Jackson",
                            NormalizedEmail = "EMILYJACKSON92@GMAIL.COM",
                            NormalizedUserName = "EMILYJACKSON",
                            PassportDetails = "NS8243805",
                            PasswordHash = "AQAAAAIAAYagAAAAEOSY3i8V4H/fMw4obPnkYG9cZQcDprNejNXA5YeZd0SimzC98KSAqcqGGqCs/6k8wQ==",
                            PhoneNumber = "+375 232 8140139",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "7cbeea3d-41dd-408b-bad9-65e0c6ec94e0",
                            TwoFactorEnabled = false,
                            UserName = "emilyjackson"
                        },
                        new
                        {
                            Id = 14,
                            AccessFailedCount = 0,
                            Address = "97 Sunset Boulevard, Oakwood",
                            ConcurrencyStamp = "b07ec692-f6dd-4318-a3e2-74a0bcc04a5f",
                            Email = "matthewhernandez13@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Matthew Hernandez",
                            NormalizedEmail = "MATTHEWHERNANDEZ13@GMAIL.COM",
                            NormalizedUserName = "MATTHEWHERNANDEZ",
                            PassportDetails = "IN1149139",
                            PasswordHash = "AQAAAAIAAYagAAAAELrka4DAQQruTnfGKWDGUgpypgo8DRa/76yQKkTWRQs4xgNOXXpY4q3R+9pjq0j6hw==",
                            PhoneNumber = "+375 44 1456318",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "c0ce6e3d-27d2-412b-ac18-30e437029e81",
                            TwoFactorEnabled = false,
                            UserName = "matthewhernandez"
                        },
                        new
                        {
                            Id = 15,
                            AccessFailedCount = 0,
                            Address = "85 Fifth Street, Valleyview",
                            ConcurrencyStamp = "a49d2816-df9f-4766-9772-4fb18f713d72",
                            Email = "aliceking24@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Alice King",
                            NormalizedEmail = "ALICEKING24@GMAIL.COM",
                            NormalizedUserName = "ALICEKING",
                            PassportDetails = "AO3207312",
                            PasswordHash = "AQAAAAIAAYagAAAAEODQ1/zg4jKoYmTidYV1GgPkz+Z69rbENMTsLbjhOvHWM/Ny2VcPuMAOHyGEZvdpZw==",
                            PhoneNumber = "+375 232 7108006",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "39485b15-8bf9-4631-bf54-363a62ffc2e1",
                            TwoFactorEnabled = false,
                            UserName = "aliceking"
                        },
                        new
                        {
                            Id = 16,
                            AccessFailedCount = 0,
                            Address = "74 Third Street, Cedarville",
                            ConcurrencyStamp = "0923368e-e567-46e7-8120-345da37d6dca",
                            Email = "lindamartinez88@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Linda Martinez",
                            NormalizedEmail = "LINDAMARTINEZ88@GMAIL.COM",
                            NormalizedUserName = "LINDAMARTINEZ",
                            PassportDetails = "RZ4485121",
                            PasswordHash = "AQAAAAIAAYagAAAAEB+LwwJ9SaJ5tLgoq3oauEVT2nCWq4co1RuTC2DwRuYMb+ZJYE8yRy/C1hlpWMal7w==",
                            PhoneNumber = "+375 232 9261368",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "e38b625e-7d6d-4790-a5c1-376b23f07d00",
                            TwoFactorEnabled = false,
                            UserName = "lindamartinez"
                        },
                        new
                        {
                            Id = 17,
                            AccessFailedCount = 0,
                            Address = "88 Hillside Avenue, Villageville",
                            ConcurrencyStamp = "b0a8f9ff-5408-4e86-8b95-d30d8fa30742",
                            Email = "margaretlewis84@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Margaret Lewis",
                            NormalizedEmail = "MARGARETLEWIS84@GMAIL.COM",
                            NormalizedUserName = "MARGARETLEWIS",
                            PassportDetails = "ME2972187",
                            PasswordHash = "AQAAAAIAAYagAAAAEEzk9VUtwSOXz6SBU/XSdc1tTSLbBTCZUuyskDS+95BVegwqPhjIq+P/r8PAtWI1Qg==",
                            PhoneNumber = "+375 25 6297265",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "7789540a-171c-4397-9bb9-9c137ef070e2",
                            TwoFactorEnabled = false,
                            UserName = "margaretlewis"
                        },
                        new
                        {
                            Id = 18,
                            AccessFailedCount = 0,
                            Address = "5 Broadway, Northfield",
                            ConcurrencyStamp = "b23697fb-aa24-439c-820f-2aab5887b4ca",
                            Email = "janemartin11@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Jane Martin",
                            NormalizedEmail = "JANEMARTIN11@GMAIL.COM",
                            NormalizedUserName = "JANEMARTIN",
                            PassportDetails = "DC6553664",
                            PasswordHash = "AQAAAAIAAYagAAAAEGwG58Sb29CYfybqcLviHBVqlvhX1U7M6AUceqqen9mKW4IM5C3fcsIxfp7kCJ091Q==",
                            PhoneNumber = "+375 25 7731900",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "515eb88c-621d-4b7e-b7e1-9b0488c95d39",
                            TwoFactorEnabled = false,
                            UserName = "janemartin"
                        },
                        new
                        {
                            Id = 19,
                            AccessFailedCount = 0,
                            Address = "88 Seventh Street, Riverside",
                            ConcurrencyStamp = "d0de27e9-5506-4fce-9392-ea7b5305a954",
                            Email = "susanclark60@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Susan Clark",
                            NormalizedEmail = "SUSANCLARK60@GMAIL.COM",
                            NormalizedUserName = "SUSANCLARK",
                            PassportDetails = "XV6184111",
                            PasswordHash = "AQAAAAIAAYagAAAAEIosiYaxyu9LNsgykXhlzSvlnmSXt5iUkZgEYdn6yCnlQHCNFOuX6JjzRiqZ25QwzA==",
                            PhoneNumber = "+375 232 3237463",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "da58fd7a-3566-46c3-8a9e-8a7b196037d0",
                            TwoFactorEnabled = false,
                            UserName = "susanclark"
                        },
                        new
                        {
                            Id = 20,
                            AccessFailedCount = 0,
                            Address = "95 Church Street, Hillcrest",
                            ConcurrencyStamp = "d354b8c0-6448-43ad-aba3-7e809ed4358c",
                            Email = "sarahlee46@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Sarah Lee",
                            NormalizedEmail = "SARAHLEE46@GMAIL.COM",
                            NormalizedUserName = "SARAHLEE",
                            PassportDetails = "KN3789345",
                            PasswordHash = "AQAAAAIAAYagAAAAEGtfBGjc4f43DYZTKCTjo6cERufHNEQCD9LBx1ULXKAP8RPcFak9UGMF1JLfPG0b3w==",
                            PhoneNumber = "+375 29 1504891",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "cfac2a46-c4f2-4ae0-b89f-da0c6ae5eaea",
                            TwoFactorEnabled = false,
                            UserName = "sarahlee"
                        },
                        new
                        {
                            Id = 21,
                            AccessFailedCount = 0,
                            Address = "1 Washington Avenue, Fairview",
                            ConcurrencyStamp = "43827f5d-ee1c-4947-8517-380d2e29a96d",
                            Email = "williamjackson76@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "William Jackson",
                            NormalizedEmail = "WILLIAMJACKSON76@GMAIL.COM",
                            NormalizedUserName = "WILLIAMJACKSON",
                            PassportDetails = "QA4175563",
                            PasswordHash = "AQAAAAIAAYagAAAAENpuKg+b5I2eO5wyvjskY9j6KxMFAGxjySd5cC89h8CEKnU5l+/J/A2UKk6sxOkW8A==",
                            PhoneNumber = "+375 29 2505990",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "7e6da9aa-1c68-41de-a0ab-6def2e2158f2",
                            TwoFactorEnabled = false,
                            UserName = "williamjackson"
                        },
                        new
                        {
                            Id = 22,
                            AccessFailedCount = 0,
                            Address = "8 Pine Street, Cedarville",
                            ConcurrencyStamp = "96c0a451-0a25-4b1a-b5fb-1517fcd99d11",
                            Email = "jessicagarcia30@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Jessica Garcia",
                            NormalizedEmail = "JESSICAGARCIA30@GMAIL.COM",
                            NormalizedUserName = "JESSICAGARCIA",
                            PassportDetails = "CX7420290",
                            PasswordHash = "AQAAAAIAAYagAAAAEHyKPCFWxdohHLHDM0DR8NH/W97QUaC7OAuPKXyndoa7SVNwtFaJj7mJSlIi33m3Fg==",
                            PhoneNumber = "+375 29 9736547",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "c7e8edb0-3a1b-4779-8b5d-eb2b9780ea63",
                            TwoFactorEnabled = false,
                            UserName = "jessicagarcia"
                        },
                        new
                        {
                            Id = 23,
                            AccessFailedCount = 0,
                            Address = "14 Main Street, Smalltown",
                            ConcurrencyStamp = "8938b2ac-9050-41e1-b906-1f745b975bef",
                            Email = "elizabethking31@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Elizabeth King",
                            NormalizedEmail = "ELIZABETHKING31@GMAIL.COM",
                            NormalizedUserName = "ELIZABETHKING",
                            PassportDetails = "DA2878316",
                            PasswordHash = "AQAAAAIAAYagAAAAEORELPwyXqzG4g45AqhAtPYXtw0jQTDk5YG2X+pYR01BWIlid5JP7znOxoJweqb4NA==",
                            PhoneNumber = "+375 29 4126018",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "ded49e75-01db-46ce-adc6-9f3aab369a27",
                            TwoFactorEnabled = false,
                            UserName = "elizabethking"
                        },
                        new
                        {
                            Id = 24,
                            AccessFailedCount = 0,
                            Address = "40 School Lane, Eastwood",
                            ConcurrencyStamp = "61703873-59c3-4112-809c-8ed4fbc70479",
                            Email = "jamesyoung10@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "James Young",
                            NormalizedEmail = "JAMESYOUNG10@GMAIL.COM",
                            NormalizedUserName = "JAMESYOUNG",
                            PassportDetails = "LA4990713",
                            PasswordHash = "AQAAAAIAAYagAAAAECD4N6ngZHu0PnmJ5jejFvKz6S2PMoIlg/HeUPVDymvduMjAeEz8FQaKeDC1WD9Baw==",
                            PhoneNumber = "+375 232 1512766",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "723301b7-1481-4e8e-9eca-96213d09e239",
                            TwoFactorEnabled = false,
                            UserName = "jamesyoung"
                        },
                        new
                        {
                            Id = 25,
                            AccessFailedCount = 0,
                            Address = "8 Broadway, Mountainview",
                            ConcurrencyStamp = "53a466fd-0947-40c2-bcec-c6b47658758d",
                            Email = "davidallen70@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "David Allen",
                            NormalizedEmail = "DAVIDALLEN70@GMAIL.COM",
                            NormalizedUserName = "DAVIDALLEN",
                            PassportDetails = "HP8169054",
                            PasswordHash = "AQAAAAIAAYagAAAAEJ2i9nWVNzcLRUNByBEXg1VPwMv2jriKjrPhtumrSdg86BmyTxGRAFBxDX/cqO84jg==",
                            PhoneNumber = "+375 33 5429618",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "76143ac6-d30f-467c-93fb-e5e45f1cf6c6",
                            TwoFactorEnabled = false,
                            UserName = "davidallen"
                        },
                        new
                        {
                            Id = 26,
                            AccessFailedCount = 0,
                            Address = "97 Elm Street, Township",
                            ConcurrencyStamp = "11d1edf9-5492-47c3-99d2-a82607a94a00",
                            Email = "bobyoung14@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Bob Young",
                            NormalizedEmail = "BOBYOUNG14@GMAIL.COM",
                            NormalizedUserName = "BOBYOUNG",
                            PassportDetails = "KY3512569",
                            PasswordHash = "AQAAAAIAAYagAAAAEFqG3pbPfySu7ZlrrT2xymd4hhMV2yYFEyC9Wq95wTx/OZeIDXVnWQhMWoHZrXVSXA==",
                            PhoneNumber = "+375 25 7347721",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "04514c5b-36c1-47aa-a383-5ea02128caa1",
                            TwoFactorEnabled = false,
                            UserName = "bobyoung"
                        },
                        new
                        {
                            Id = 27,
                            AccessFailedCount = 0,
                            Address = "62 Tenth Street, Springfield",
                            ConcurrencyStamp = "3729eaf8-31d6-46d5-a8e6-49e5371eeac6",
                            Email = "janewalker27@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Jane Walker",
                            NormalizedEmail = "JANEWALKER27@GMAIL.COM",
                            NormalizedUserName = "JANEWALKER",
                            PassportDetails = "GF7827932",
                            PasswordHash = "AQAAAAIAAYagAAAAEJ19v659U00jeaSlqK97oX2ytQyRQnllIavX9Rn5nXYA5qHxyb9HkfLJ8lSrzi7+/g==",
                            PhoneNumber = "+375 25 7713145",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "b7d53d76-09f8-40d5-81c2-75f28d21eec2",
                            TwoFactorEnabled = false,
                            UserName = "janewalker"
                        },
                        new
                        {
                            Id = 28,
                            AccessFailedCount = 0,
                            Address = "7 Church Street, Lakeview",
                            ConcurrencyStamp = "3c199a71-2f52-466a-857b-a3acd4cc2cd5",
                            Email = "emilydavis76@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Emily Davis",
                            NormalizedEmail = "EMILYDAVIS76@GMAIL.COM",
                            NormalizedUserName = "EMILYDAVIS",
                            PassportDetails = "KJ7761350",
                            PasswordHash = "AQAAAAIAAYagAAAAELeb+1UjE98o5f5P97o9yPdfgpVW02yh7zM3RQGuYJ0eOJoGzJF686slH1lFDMr9uQ==",
                            PhoneNumber = "+375 29 7122835",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "e27b404c-18bc-4331-bd23-13fd20f360a8",
                            TwoFactorEnabled = false,
                            UserName = "emilydavis"
                        },
                        new
                        {
                            Id = 29,
                            AccessFailedCount = 0,
                            Address = "38 Elm Street, Countyville",
                            ConcurrencyStamp = "072e0b67-3197-4538-bb44-3347dfdb96da",
                            Email = "bobharris28@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Bob Harris",
                            NormalizedEmail = "BOBHARRIS28@GMAIL.COM",
                            NormalizedUserName = "BOBHARRIS",
                            PassportDetails = "FX8287766",
                            PasswordHash = "AQAAAAIAAYagAAAAEFOmArwv3H6yoD1SQOihwWOKqqFvzwDq76oOqzVfGUb1y/UN0+S4JF03mF6fno/zfA==",
                            PhoneNumber = "+375 232 4148322",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "134a5eee-64f4-464e-8467-2057ca76dcfb",
                            TwoFactorEnabled = false,
                            UserName = "bobharris"
                        },
                        new
                        {
                            Id = 30,
                            AccessFailedCount = 0,
                            Address = "41 Victory Street, Metropolis",
                            ConcurrencyStamp = "eb455525-3d97-46fa-b14e-809ec252b1ed",
                            Email = "robertharris49@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Robert Harris",
                            NormalizedEmail = "ROBERTHARRIS49@GMAIL.COM",
                            NormalizedUserName = "ROBERTHARRIS",
                            PassportDetails = "GK9265718",
                            PasswordHash = "AQAAAAIAAYagAAAAEG12kaQGLOc9OJjJ32ui6gyl+68eLLJHvpJIepDOHiMgI1jXHULZ/1/J4x2i2mj7ow==",
                            PhoneNumber = "+375 29 6228080",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "51458401-5bfb-4183-b200-140d20656929",
                            TwoFactorEnabled = false,
                            UserName = "robertharris"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 11,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 12,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 13,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 14,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 15,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 16,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 17,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 18,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 19,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 20,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 21,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 22,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 23,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 24,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 25,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 26,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 27,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 28,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 29,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 30,
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Car_hire.DAL.Entities.Models.Order", b =>
                {
                    b.HasOne("Car_hire.DAL.Entities.Models.Car", "Car")
                        .WithMany("Orders")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Car_hire.DAL.Entities.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Car_hire.DAL.Entities.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Car_hire.DAL.Entities.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Car_hire.DAL.Entities.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Car_hire.DAL.Entities.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Car_hire.DAL.Entities.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Car_hire.DAL.Entities.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Car_hire.DAL.Entities.Models.Car", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Car_hire.DAL.Entities.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
